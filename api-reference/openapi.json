{
    "openapi": "3.1.0",
    "info": {
        "title": "Bluejay API",
        "description": "Bluejay API",
        "version": "0.1.0"
    },
    "paths": {
        "/v1/send-text": {
            "post": {
                "summary": "Recieve Text Processor",
                "description": "Process text input and return a response.",
                "operationId": "recieve_text_processor_v1_send_text_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TextProcessorRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/api-keys": {
            "post": {
                "summary": "Create Api Key",
                "operationId": "create_api_key_v1_api_keys_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateKeyIn"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeyOut"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/api-keys/{key_id}": {
            "delete": {
                "summary": "Revoke Key",
                "operationId": "revoke_key_v1_api_keys__key_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/log-evaluation": {
            "post": {
                "summary": "Upload Audio",
                "operationId": "upload_audio_v1_log_evaluation_post",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_audio_v1_log_evaluation_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/generate-test-scenarios": {
            "post": {
                "summary": "Generate Test Scenarios",
                "description": "Generates test scenarios for a given simulation.\n\nAccepts a SimulationRequest with the following structure:\n{\n    name: string;\n    agent: Agent;\n    scenarios: TestScenarioRequest[];\n    callAllocation: {\n        goalAdherence: { [key: string]: number };\n        systemIntegrity: { [key: string]: number };\n        customerPersonas: { [key: string]: number };\n        workflowAdherence: { [key: string]: number };\n        expectedToolCalls: [{name: string, output: string}, {name: string, output: string}, ...];\n        customPrompt: {prompt: string, count: number};\n        transcriptGeneration: [{problem: string, transcript: string, success_criteria: string, use_specific_utterances?: boolean}, ...];\n            // For transcriptGeneration: \n            // - If use_specific_utterances is true (default): customer utterances extracted and stored as JSON string in scenario description\n            // - If use_specific_utterances is false: persona intent description generated in natural language\n    };\n    selectedProperties: {\n        [category: string]: string[];\n    };\n    customerTraits?: [\n        {name: string, data_type: \"boolean\" | \"string\" | \"date\" | \"number\"}\n    ];\n}",
                "operationId": "generate_test_scenarios_v1_generate_test_scenarios_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-workflow-graph": {
            "post": {
                "summary": "Generate Workflow Graph",
                "description": "Generate a workflow graph from a system prompt.\n\nAccepts a WorkflowGenerationRequest with the following structure:\n{\n    system_prompt: string;\n}\n\nReturns a workflow graph with nodes and edges representing the conversational flow.",
                "operationId": "generate_workflow_graph_v1_generate_workflow_graph_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowGenerationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowGenerationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/move-regen-test-scenarios": {
            "post": {
                "summary": "Move Regen Test Scenarios Endpoint",
                "description": "Regenerates test scenarios with a new goal while preserving scenario descriptions.\n\nAccepts a request with the following structure:\n{\n    agent: Agent;\n    scenarios: TestScenario[];\n    newGoal: string;\n}",
                "operationId": "move_regen_test_scenarios_endpoint_v1_move_regen_test_scenarios_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/regen-test-scenarios": {
            "post": {
                "summary": "Regen Test Scenarios Endpoint",
                "description": "Regenerates test scenarios based on custom instructions while preserving style and structure.\n\nAccepts a request with the following structure:\n{\n    agent: Agent;\n    scenarios: TestScenario[];\n    instructions: string;\n    persona?: CustomerPersona;\n}",
                "operationId": "regen_test_scenarios_endpoint_v1_regen_test_scenarios_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/evaluate-call": {
            "post": {
                "summary": "Evaluate",
                "description": "Submit a call or chat for evaluation.\n\nReturns an eval ID that can be used to track evaluation status.",
                "operationId": "evaluate_v1_evaluate_call_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/CallRequestUsingAgentId"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CallRequestUsingExternalAgentId"
                                    }
                                ],
                                "title": "Call Data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluateCallResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/evaluate": {
            "post": {
                "summary": "Evaluate",
                "description": "Submit a call or chat for evaluation.\n\nReturns an eval ID that can be used to track evaluation status.",
                "operationId": "evaluate_v1_evaluate_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/CallRequestUsingAgentId"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CallRequestUsingExternalAgentId"
                                    }
                                ],
                                "title": "Call Data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluateCallResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/retrieve-call-logs": {
            "get": {
                "summary": "Retrieve Call Logs",
                "operationId": "retrieve_call_logs_v1_retrieve_call_logs_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/retrieve-call-logs/{agent_id}": {
            "get": {
                "summary": "Retrieve Call Logs",
                "description": "Retrieve call logs for a specific agent given the agent ID.\nReturns a list of call objects, each with an additional \"evaluations\" field\ncontaining a list of evaluations joined via call_id.",
                "operationId": "retrieve_call_logs_v1_retrieve_call_logs__agent_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveCallLogsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/retrieve-call-log": {
            "get": {
                "summary": "Retrieve Call Log",
                "operationId": "retrieve_call_log_v1_retrieve_call_log_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/retrieve-call-log/{call_id}": {
            "get": {
                "summary": "Retrieve Call Log",
                "description": "Retrieve call logs for a specific agent given the agent ID.\nReturns a list of call objects, each with an additional \"evaluations\" field\ncontaining a list of evaluations joined via call_id.",
                "operationId": "retrieve_call_log_v1_retrieve_call_log__call_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Call Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrieveCallLogResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/add-agent": {
            "post": {
                "summary": "Add Agent",
                "description": "Add a new agent to the system.\n\nReturns the agent id and a status code.",
                "operationId": "add_agent_v1_add_agent_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-agent": {
            "post": {
                "summary": "Update Agent",
                "description": "Update an existing agent in the system.",
                "operationId": "update_agent_v1_update_agent_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentUpdateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/agents/{agent_id}": {
            "get": {
                "summary": "Get Agent",
                "description": "Get an agent by ID.",
                "operationId": "get_agent_v1_agents__agent_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentPydantic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/all-agents": {
            "get": {
                "summary": "Get All Agents",
                "description": "Get all your agents.",
                "operationId": "get_all_agents_v1_all_agents_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AgentPydantic"
                                    },
                                    "title": "Response Get All Agents V1 All Agents Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/create-simulation": {
            "post": {
                "summary": "Create Simulation",
                "description": "Create a new simulation with the provided details.\n\nReturns the simulation id and a status code.",
                "operationId": "create_simulation_v1_create_simulation_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SimulationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/get-all-simulations": {
            "get": {
                "summary": "Get All Simulations",
                "description": "Get all simulations for a user.",
                "operationId": "get_all_simulations_v1_get_all_simulations_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSimulationsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/get-simulations-by-agent/{agent_id}": {
            "get": {
                "summary": "Get Simulations By Agent",
                "description": "Get all simulations for a specific agent.",
                "operationId": "get_simulations_by_agent_v1_get_simulations_by_agent__agent_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSimulationsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/get-simulation-runs/{simulation_id}": {
            "get": {
                "summary": "Get Simulation Runs",
                "description": "Get all simulation runs for a specific simulation.",
                "operationId": "get_simulation_runs_v1_get_simulation_runs__simulation_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "simulation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Simulation Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetSimulationRunsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-digital-humans": {
            "post": {
                "summary": "Generate Digital Humans",
                "description": "Generate digital humans based on the provided simulation details.\n\nReturns a list of generated digital humans.",
                "operationId": "generate_digital_humans_v1_generate_digital_humans_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DigitalHumanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DigitalHumanResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/queue-simulation-run": {
            "post": {
                "summary": "Queue Simulation Run",
                "description": "Queue a simulation run for processing.",
                "operationId": "queue_simulation_run_v1_queue_simulation_run_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/src__main__SimulationRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulationRunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/check-queue-simulation-run/{simulation_run_id}": {
            "post": {
                "summary": "Check Queue Simulation Run",
                "operationId": "check_queue_simulation_run_v1_check_queue_simulation_run__simulation_run_id__post",
                "parameters": [
                    {
                        "name": "simulation_run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Simulation Run Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-simulation-result": {
            "post": {
                "summary": "Update Simulation Result",
                "operationId": "update_simulation_result_v1_update_simulation_result_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSimulationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSimulationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/create-cron-job": {
            "post": {
                "summary": "Create Cron Job",
                "operationId": "create_cron_job_v1_create_cron_job_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCronJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCronJobResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-cron-job/{cron_job_id}": {
            "put": {
                "summary": "Update Cron Job",
                "operationId": "update_cron_job_v1_update_cron_job__cron_job_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cron Job Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCronJobRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCronJobResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/delete-cron-job/{cron_job_id}": {
            "delete": {
                "summary": "Delete Cron Job",
                "operationId": "delete_cron_job_v1_delete_cron_job__cron_job_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "cron_job_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cron Job Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteCronJobResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/retrieve-simulation-results/{simulation_run_id}": {
            "get": {
                "summary": "Retrieve Simulation Results",
                "description": "Retrieve the results of a simulation run.\n\nReturns the simulation run details and associated test cases.",
                "operationId": "retrieve_simulation_results_v1_retrieve_simulation_results__simulation_run_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "simulation_run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Simulation Run Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulationResultsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-translated-transcript/{test_result_id}": {
            "post": {
                "summary": "Generate Translated Transcript",
                "description": "Generate a translated transcript for a given audio file.",
                "operationId": "generate_translated_transcript_v1_generate_translated_transcript__test_result_id__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "test_result_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Test Result Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-custom-metrics": {
            "post": {
                "summary": "Generate Custom Metrics",
                "description": "Generate custom metrics for a given agent based on its description and knowledge base.",
                "operationId": "generate_custom_metrics_v1_generate_custom_metrics_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCustomMetricsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generate-customer-personas": {
            "post": {
                "summary": "Generate Customer Personas",
                "description": "Generate custom personas for a given agent based on its description and knowledge base.",
                "operationId": "generate_customer_personas_v1_generate_customer_personas_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCustomPersonasRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ping": {
            "get": {
                "summary": "Pong",
                "operationId": "pong_v1_ping_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/compare-experiment-runs": {
            "post": {
                "summary": "Compare Experiment Runs",
                "description": "Compare multiple experiment runs and generate a summary of differences",
                "operationId": "compare_experiment_runs_v1_compare_experiment_runs_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComparisonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComparisonResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/create-custom-metric": {
            "post": {
                "tags": [
                    "Custom Metrics"
                ],
                "summary": "Create Custom Metric",
                "description": "Create a new custom metric.",
                "operationId": "create_custom_metric_v1_create_custom_metric_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCustomMetricRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomMetricResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/custom-metric/{metric_id}": {
            "get": {
                "tags": [
                    "Custom Metrics"
                ],
                "summary": "Get Custom Metric",
                "description": "Get a specific custom metric by ID.",
                "operationId": "get_custom_metric_v1_custom_metric__metric_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "metric_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Metric Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomMetricResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Custom Metrics"
                ],
                "summary": "Delete Custom Metric",
                "description": "Delete a specific custom metric by ID.",
                "operationId": "delete_custom_metric_v1_custom_metric__metric_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "metric_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Metric Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomMetric"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/custom-metrics-by-agent/{agent_id}": {
            "get": {
                "tags": [
                    "Custom Metrics"
                ],
                "summary": "Get Custom Metrics By Agent",
                "description": "Get all custom metrics for an agent.",
                "operationId": "get_custom_metrics_by_agent_v1_custom_metrics_by_agent__agent_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomMetricsListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-custom-metric/{metric_id}": {
            "put": {
                "tags": [
                    "Custom Metrics"
                ],
                "summary": "Update Custom Metric",
                "description": "Update a specific custom metric by ID.",
                "operationId": "update_custom_metric_v1_update_custom_metric__metric_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "metric_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Metric Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomMetricRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomMetricResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/create-customer-persona": {
            "post": {
                "tags": [
                    "Customer Personas"
                ],
                "summary": "Create Customer Persona",
                "description": "Create a new customer persona.",
                "operationId": "create_customer_persona_v1_create_customer_persona_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCustomerPersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPersonaPydantic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/customer-personas-by-agent/{agent_id}": {
            "get": {
                "tags": [
                    "Customer Personas"
                ],
                "summary": "Get Customer Personas By Agent",
                "description": "Get all customer personas for an agent.",
                "operationId": "get_customer_personas_by_agent_v1_customer_personas_by_agent__agent_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerPersonaPydantic"
                                    },
                                    "title": "Response Get Customer Personas By Agent V1 Customer Personas By Agent  Agent Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/customer-persona/{persona_id}": {
            "get": {
                "tags": [
                    "Customer Personas"
                ],
                "summary": "Get Customer Persona",
                "description": "Get a specific customer persona by ID.",
                "operationId": "get_customer_persona_v1_customer_persona__persona_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Persona Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPersonaPydantic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer Personas"
                ],
                "summary": "Delete Customer Persona",
                "description": "Delete a specific customer persona by ID.",
                "operationId": "delete_customer_persona_v1_customer_persona__persona_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Persona Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPersonaPydantic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-customer-persona/{persona_id}": {
            "put": {
                "tags": [
                    "Customer Personas"
                ],
                "summary": "Update Customer Persona",
                "description": "Update a specific customer persona by ID.",
                "operationId": "update_customer_persona_v1_update_customer_persona__persona_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "persona_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Persona Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomerPersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPersonaPydantic"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/traces/{trace_id}": {
            "post": {
                "tags": [
                    "Traces"
                ],
                "summary": "Get Trace",
                "operationId": "get_trace_v1_traces__trace_id__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "trace_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Trace Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/spans/{trace_id}/{span_id}": {
            "post": {
                "tags": [
                    "Traces"
                ],
                "summary": "Get Span",
                "operationId": "get_span_v1_spans__trace_id___span_id__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "trace_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Trace Id"
                        }
                    },
                    {
                        "name": "span_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Span Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/phone-numbers": {
            "get": {
                "tags": [
                    "Phone Numbers"
                ],
                "summary": "Get Phone Numbers",
                "description": "Return phone number under an org",
                "operationId": "get_phone_numbers_v1_phone_numbers_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneNumberResponse"
                                    },
                                    "title": "Response Get Phone Numbers V1 Phone Numbers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/integrations/retell": {
            "post": {
                "tags": [
                    "retell"
                ],
                "summary": "Handle Webhook",
                "description": "Handle Retell webhook events",
                "operationId": "handle_webhook_v1_integrations_retell_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/integrations/vapi": {
            "post": {
                "tags": [
                    "vapi"
                ],
                "summary": "Handle Webhook",
                "description": "Handle VAPI webhook events",
                "operationId": "handle_webhook_v1_integrations_vapi_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/queue-sms-simulation-run": {
            "post": {
                "tags": [
                    "Text Simulations"
                ],
                "summary": "Queue Sms Simulation Run",
                "operationId": "queue_sms_simulation_run_v1_queue_sms_simulation_run_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/src__text_agent_api__SimulationRunRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulationRunResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/receive-text-message": {
            "post": {
                "tags": [
                    "Text Simulations"
                ],
                "summary": "Receive Text Message",
                "operationId": "receive_text_message_v1_receive_text_message_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/test-text-api": {
            "post": {
                "tags": [
                    "Text Simulations"
                ],
                "summary": "Text Api",
                "operationId": "text_api_v1_test_text_api_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ]
            }
        },
        "/v1/create-digital-human": {
            "post": {
                "tags": [
                    "Digital Humans"
                ],
                "summary": "Create Digital Human",
                "description": "Create a new digital human",
                "operationId": "create_digital_human_v1_create_digital_human_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDigitalHumanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__digital_humans__DigitalHumanResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/update-digital-human/{digital_human_id}": {
            "put": {
                "tags": [
                    "Digital Humans"
                ],
                "summary": "Update Digital Human",
                "description": "Update a digital human by ID",
                "operationId": "update_digital_human_v1_update_digital_human__digital_human_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "digital_human_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Digital Human Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDigitalHumanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__digital_humans__DigitalHumanResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/digital-human/{digital_human_id}": {
            "get": {
                "tags": [
                    "Digital Humans"
                ],
                "summary": "Get Digital Human",
                "description": "Get a digital human by ID",
                "operationId": "get_digital_human_v1_digital_human__digital_human_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "digital_human_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Digital Human Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/src__api__digital_humans__DigitalHumanResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Digital Humans"
                ],
                "summary": "Delete Digital Human",
                "description": "Delete a digital human by ID",
                "operationId": "delete_digital_human_v1_digital_human__digital_human_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "digital_human_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Digital Human Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/digital-humans-by-simulation/{simulation_id}": {
            "get": {
                "tags": [
                    "Digital Humans"
                ],
                "summary": "Get Digital Humans By Simulation",
                "description": "Get digital humans by simulation ID",
                "operationId": "get_digital_humans_by_simulation_v1_digital_humans_by_simulation__simulation_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "simulation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Simulation Id"
                        }
                    },
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key required to authenticate requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DigitalHumansListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgentMode": {
                "type": "string",
                "enum": [
                    "VOICE",
                    "TEXT"
                ],
                "title": "AgentMode",
                "description": "Enum representing the mode of agent"
            },
            "AgentPydantic": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "agent_description": {
                        "type": "string",
                        "title": "Agent Description"
                    },
                    "knowledge_base": {
                        "type": "string",
                        "title": "Knowledge Base"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "goals": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Goals"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/AgentMode"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number"
                    },
                    "websocket_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Websocket Url"
                    },
                    "redact_pii": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Redact Pii"
                    },
                    "folder_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Folder Id"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "keyterms": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keyterms"
                    },
                    "voice_provider": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voice Provider"
                    },
                    "provider_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Provider Id"
                    },
                    "external_agent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "External Agent Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "agent_description",
                    "knowledge_base",
                    "organization_id",
                    "mode"
                ],
                "title": "AgentPydantic"
            },
            "AgentRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the agent"
                    },
                    "system_prompt": {
                        "type": "string",
                        "title": "System Prompt",
                        "description": "System prompt for the agent"
                    },
                    "knowledge_base": {
                        "type": "string",
                        "title": "Knowledge Base",
                        "description": "Knowledge base of the agent"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "Phone number associated with the agent"
                    },
                    "goals": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Goals",
                        "description": "List of goals for the agent"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "INBOUND: Agent receives incoming calls from customers\nOUTBOUND: Agent makes outgoing calls to customers",
                        "default": "INBOUND"
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentMode"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modality of the agent",
                        "default": "VOICE"
                    },
                    "keyterms": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keyterms",
                        "description": "List of keyterms for the agent"
                    },
                    "external_agent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "External Agent Id",
                        "description": "External agent ID for the agent"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "system_prompt",
                    "knowledge_base",
                    "phone_number",
                    "goals"
                ],
                "title": "AgentRequest"
            },
            "AgentResponse": {
                "properties": {
                    "agent_id": {
                        "type": "integer",
                        "title": "Agent Id",
                        "description": "ID of the created agent"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id"
                ],
                "title": "AgentResponse"
            },
            "AgentType": {
                "type": "string",
                "enum": [
                    "INBOUND",
                    "OUTBOUND"
                ],
                "title": "AgentType",
                "description": "Enum representing the type of agent"
            },
            "AgentUpdateRequest": {
                "properties": {
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent to be updated"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the agent"
                    },
                    "system_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "System Prompt",
                        "description": "System prompt for the agent"
                    },
                    "knowledge_base": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Knowledge Base",
                        "description": "Knowledge base of the agent"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number",
                        "description": "Phone number associated with the agent"
                    },
                    "goals": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Goals",
                        "description": "List of goals for the agent"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "INBOUND: Agent receives incoming calls from customers\nOUTBOUND: Agent makes outgoing calls to customers"
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentMode"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modality of the agent"
                    },
                    "keyterms": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keyterms",
                        "description": "List of keyterms for the agent"
                    },
                    "external_agent_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "External Agent Id",
                        "description": "External agent ID for the agent"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id"
                ],
                "title": "AgentUpdateRequest"
            },
            "AgentUpdateResponse": {
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/AgentUpdateRequest",
                        "description": "Updated agent details"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "agent"
                ],
                "title": "AgentUpdateResponse"
            },
            "Body_upload_audio_v1_log_evaluation_post": {
                "properties": {
                    "org_id": {
                        "type": "string",
                        "title": "Org Id"
                    },
                    "eval_id": {
                        "type": "string",
                        "title": "Eval Id"
                    },
                    "eval_name": {
                        "type": "string",
                        "title": "Eval Name"
                    },
                    "agent_description": {
                        "type": "string",
                        "title": "Agent Description"
                    },
                    "knowledge_base": {
                        "type": "string",
                        "title": "Knowledge Base"
                    },
                    "custom_questions": {
                        "type": "string",
                        "title": "Custom Questions"
                    },
                    "transcript": {
                        "type": "string",
                        "title": "Transcript"
                    },
                    "audio_file": {
                        "type": "string",
                        "format": "binary",
                        "title": "Audio File"
                    }
                },
                "type": "object",
                "required": [
                    "org_id",
                    "eval_id",
                    "eval_name",
                    "agent_description",
                    "knowledge_base",
                    "custom_questions",
                    "transcript",
                    "audio_file"
                ],
                "title": "Body_upload_audio_v1_log_evaluation_post"
            },
            "CallDirection": {
                "type": "string",
                "enum": [
                    "INBOUND",
                    "OUTBOUND"
                ],
                "title": "CallDirection",
                "description": "Enum representing the direction of a call."
            },
            "CallInterface": {
                "type": "string",
                "enum": [
                    "PHONE"
                ],
                "title": "CallInterface",
                "description": "Enum representing the interface used for a call."
            },
            "CallLog": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the call"
                    },
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent associated with the call"
                    },
                    "recording_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recording Url",
                        "description": "URL to the recording file (supported formats: .mp4, .wav, .m4a)"
                    },
                    "start_time_utc": {
                        "type": "string",
                        "title": "Start Time Utc",
                        "description": "When the call started, in UTC"
                    },
                    "participants": {
                        "items": {
                            "$ref": "#/components/schemas/ParticipantResponse"
                        },
                        "type": "array",
                        "title": "Participants",
                        "description": "List of call participants"
                    },
                    "call_direction": {
                        "$ref": "#/components/schemas/CallDirection",
                        "description": "Direction of the call from the Agent's perspective (INBOUND or OUTBOUND)",
                        "default": "INBOUND"
                    },
                    "interface": {
                        "$ref": "#/components/schemas/CallInterface",
                        "description": "Interface used for the call",
                        "default": "PHONE"
                    },
                    "status": {
                        "$ref": "#/components/schemas/CallStatus",
                        "description": "Current status of the call"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this request was created (defaults to now in UTC)"
                    },
                    "transcript_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript Url",
                        "description": "URL to the transcript file (supported formats: .txt, .json)"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCallResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls",
                        "description": "List of tool calls made during the call"
                    },
                    "events": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Events",
                        "description": "List of events that occurred during the call"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "List of tags associated with the call"
                    },
                    "duration_ms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration Ms",
                        "description": "Duration of the call in milliseconds",
                        "default": 0
                    },
                    "evaluations": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Evaluation"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Evaluations",
                        "description": "List of evaluations associated with the call"
                    },
                    "custom_metrics": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Metrics",
                        "description": "Custom metrics associated with the call"
                    },
                    "annotations": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Annotations",
                        "description": "Annotations associated with the call"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the call"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "agent_id",
                    "recording_url",
                    "start_time_utc",
                    "participants",
                    "status"
                ],
                "title": "CallLog"
            },
            "CallRequestUsingAgentId": {
                "properties": {
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent associated with the call"
                    },
                    "recording_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recording Url",
                        "description": "URL to the recording file (supported formats: .mp3, .mp4, .wav, .m4a)"
                    },
                    "start_time_utc": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time Utc",
                        "description": "When the call started, in UTC ([python] log: datetime.now(timezone.utc) at call start)"
                    },
                    "participants": {
                        "items": {
                            "$ref": "#/components/schemas/ParticipantRequest"
                        },
                        "type": "array",
                        "title": "Participants",
                        "description": "List of call participants"
                    },
                    "call_direction": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CallDirection"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Direction of the call from the Agent's perspective (INBOUND or OUTBOUND)",
                        "default": "INBOUND"
                    },
                    "interface": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CallInterface"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Interface used for the call",
                        "default": "PHONE"
                    },
                    "transcript_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript Url",
                        "description": "URL to the transcript file (supported formats: .json)"
                    },
                    "transcript": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TranscriptEntryRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript",
                        "description": "Transcript of the call in text format"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCallRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls",
                        "description": "List of tool calls made during the call"
                    },
                    "events": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/EventRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Events",
                        "description": "List of events that occurred during the call"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "List of tags associated with the call"
                    },
                    "trace_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trace Id",
                        "description": "Trace ID of the call"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "When this request was created (defaults to now in UTC)"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the evaluation"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id",
                    "start_time_utc",
                    "participants"
                ],
                "title": "Call Request Using Bluejay Agent ID"
            },
            "CallRequestUsingExternalAgentId": {
                "properties": {
                    "external_agent_id": {
                        "type": "string",
                        "title": "External Agent Id",
                        "description": "The external ID of your agent to associate with the call"
                    },
                    "recording_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recording Url",
                        "description": "URL to the recording file (supported formats: .mp3, .mp4, .wav, .m4a)"
                    },
                    "start_time_utc": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time Utc",
                        "description": "When the call started, in UTC ([python] log: datetime.now(timezone.utc) at call start)"
                    },
                    "participants": {
                        "items": {
                            "$ref": "#/components/schemas/ParticipantRequest"
                        },
                        "type": "array",
                        "title": "Participants",
                        "description": "List of call participants"
                    },
                    "call_direction": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CallDirection"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Direction of the call from the Agent's perspective (INBOUND or OUTBOUND)",
                        "default": "INBOUND"
                    },
                    "interface": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CallInterface"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Interface used for the call",
                        "default": "PHONE"
                    },
                    "transcript_url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript Url",
                        "description": "URL to the transcript file (supported formats: .json)"
                    },
                    "transcript": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TranscriptEntryRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript",
                        "description": "Transcript of the call in text format"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCallRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls",
                        "description": "List of tool calls made during the call"
                    },
                    "events": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/EventRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Events",
                        "description": "List of events that occurred during the call"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "List of tags associated with the call"
                    },
                    "trace_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trace Id",
                        "description": "Trace ID of the call"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At",
                        "description": "When this request was created (defaults to now in UTC)"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the evaluation"
                    }
                },
                "type": "object",
                "required": [
                    "external_agent_id",
                    "start_time_utc",
                    "participants"
                ],
                "title": "Call Request Using External Agent ID"
            },
            "CallStatus": {
                "type": "string",
                "enum": [
                    "INITIALIZING",
                    "QUEUED",
                    "EVALUATING",
                    "COMPLETED",
                    "INCOMPLETED"
                ],
                "title": "CallStatus",
                "description": "Enum representing the possible states of a call."
            },
            "ComparisonRequest": {
                "properties": {
                    "experiment_run_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "type": "array",
                        "title": "Experiment Run Ids",
                        "description": "List of experiment run IDs to compare"
                    }
                },
                "type": "object",
                "required": [
                    "experiment_run_ids"
                ],
                "title": "ComparisonRequest",
                "description": "Pydantic model for experiment run comparison request"
            },
            "ComparisonResponse": {
                "properties": {
                    "summary": {
                        "type": "string",
                        "title": "Summary",
                        "description": "AI-generated comparison summary of the experiment runs"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "summary"
                ],
                "title": "ComparisonResponse",
                "description": "Pydantic model for experiment run comparison response"
            },
            "CreateCronJobRequest": {
                "properties": {
                    "simulation_id": {
                        "type": "string",
                        "title": "Simulation Id",
                        "description": "The unique identifier for the associated simulation."
                    },
                    "schedule": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EveryNMinutesSchedule"
                            },
                            {
                                "$ref": "#/components/schemas/DailySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/WeeklySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/MonthlySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/CronSchedule"
                            }
                        ],
                        "title": "Schedule",
                        "description": "The schedule for the cron job."
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Whether the cron job should be enabled upon creation.",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "simulation_id",
                    "schedule"
                ],
                "title": "CreateCronJobRequest"
            },
            "CreateCronJobResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "The unique identifier for the created cron job."
                    },
                    "experiment_id": {
                        "type": "string",
                        "title": "Experiment Id",
                        "description": "The unique identifier for the associated experiment."
                    },
                    "cron_expression": {
                        "type": "string",
                        "title": "Cron Expression",
                        "description": "The cron expression defining the job schedule."
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Whether the cron job is enabled."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "experiment_id",
                    "cron_expression"
                ],
                "title": "CreateCronJobResponse"
            },
            "CreateCustomMetricRequest": {
                "properties": {
                    "agent_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Id",
                        "description": "ID of the agent this metric belongs to"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom metric"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of what this metric measures"
                    },
                    "response_type": {
                        "$ref": "#/components/schemas/ResponseType",
                        "description": "Type of response expected"
                    },
                    "min_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Value",
                        "description": "Minimum value for quantitative metrics"
                    },
                    "max_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Value",
                        "description": "Maximum value for quantitative metrics"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Category",
                        "description": "Category for organizing metrics"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorizing the metric"
                    },
                    "scoring_guidance": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scoring Guidance",
                        "description": "Guidance on how to score this metric"
                    },
                    "eval_route": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EvalRoute"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Route for evaluating the metric",
                        "default": "AUTO"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model",
                        "description": "Model to use for evaluating the metric"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature for evaluating the metric"
                    },
                    "enum_options": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enum Options",
                        "description": "Options for enum metrics"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "response_type"
                ],
                "title": "CreateCustomMetricRequest",
                "description": "Request model for creating a custom metric"
            },
            "CreateCustomerPersonaRequest": {
                "properties": {
                    "agent_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Id",
                        "description": "ID of the agent this persona belongs to"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the customer persona"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the customer persona"
                    },
                    "goal": {
                        "type": "string",
                        "title": "Goal",
                        "description": "Goal of the customer persona"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "goal"
                ],
                "title": "CreateCustomerPersonaRequest"
            },
            "CreateDigitalHumanRequest": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the digital human"
                    },
                    "success_criteria": {
                        "type": "string",
                        "title": "Success Criteria",
                        "description": "Success criteria for the digital human"
                    },
                    "simulation_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Simulation Id",
                        "description": "ID of the associated experiment"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorizing the digital human"
                    },
                    "agent_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Id",
                        "description": "ID of the associated agent"
                    },
                    "human_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Human Name",
                        "description": "Name of the digital human"
                    },
                    "human_picture": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Human Picture",
                        "description": "URL or path to the digital human's picture"
                    },
                    "language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Language",
                        "description": "Language the digital human speaks"
                    },
                    "accent": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Accent",
                        "description": "Accent of the digital human"
                    },
                    "background_noise": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Background Noise",
                        "description": "Type of background noise"
                    },
                    "voice_speed": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Voice Speed",
                        "description": "Speed of the digital human's voice"
                    },
                    "emotion_map": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Emotion Map",
                        "description": "Emotion mapping configuration"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number",
                        "description": "Phone number for the digital human"
                    },
                    "num_runs": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Num Runs",
                        "description": "Number of runs for this digital human",
                        "default": 1
                    },
                    "step_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Step Id",
                        "description": "ID of the associated step"
                    },
                    "outbound_text_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Outbound Text Number",
                        "description": "Outbound text number"
                    },
                    "websocket_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Websocket Url",
                        "description": "WebSocket URL for real-time communication"
                    },
                    "background_noise_volume": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Background Noise Volume",
                        "description": "Volume of background noise"
                    },
                    "expected_tool_calls": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expected Tool Calls",
                        "description": "Expected tool calls"
                    },
                    "endpointing_delay": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endpointing Delay",
                        "description": "Delay for endpointing"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature setting"
                    },
                    "hangup_phrases": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hangup Phrases",
                        "description": "Phrases that trigger hangup"
                    },
                    "silence_timeout": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Silence Timeout",
                        "description": "Silence timeout in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "success_criteria"
                ],
                "title": "CreateDigitalHumanRequest",
                "description": "Request model for creating a digital human"
            },
            "CreateKeyIn": {
                "properties": {
                    "scope": {
                        "type": "string",
                        "title": "Scope"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "scope"
                ],
                "title": "CreateKeyIn"
            },
            "CronSchedule": {
                "properties": {
                    "frequency": {
                        "type": "string",
                        "const": "cron",
                        "title": "Frequency"
                    },
                    "expression": {
                        "type": "string",
                        "title": "Expression",
                        "description": "Cron expression"
                    }
                },
                "type": "object",
                "required": [
                    "frequency",
                    "expression"
                ],
                "title": "CronSchedule"
            },
            "CustomMetric": {
                "properties": {
                    "agent_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "response_type": {
                        "$ref": "#/components/schemas/ResponseType"
                    },
                    "min_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Value"
                    },
                    "max_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Value"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Unique identifier for the custom metric"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Category"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    },
                    "scoring_guidance": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scoring Guidance"
                    },
                    "eval_route": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EvalRoute"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": "AUTO"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature"
                    },
                    "enum_options": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enum Options"
                    },
                    "organization_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organization Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "response_type"
                ],
                "title": "CustomMetric",
                "description": "Represents a custom metric entry in the database."
            },
            "CustomMetricResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the custom metric"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the custom metric"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of what this metric measures"
                    },
                    "response_type": {
                        "$ref": "#/components/schemas/ResponseType",
                        "description": "Type of response expected"
                    },
                    "min_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Value",
                        "description": "Minimum value for quantitative metrics"
                    },
                    "max_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Value",
                        "description": "Maximum value for quantitative metrics"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Category",
                        "description": "Category for organizing metrics"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorizing the metric"
                    },
                    "scoring_guidance": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scoring Guidance",
                        "description": "Guidance on how to score this metric"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this metric was created"
                    },
                    "eval_route": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EvalRoute"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Route for evaluating the metric"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model",
                        "description": "Model to use for evaluating the metric"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature for evaluating the metric"
                    },
                    "enum_options": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enum Options",
                        "description": "Options for enum metrics"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "response_type",
                    "created_at"
                ],
                "title": "CustomMetricResponse",
                "description": "Response model for custom metric operations"
            },
            "CustomMetricsListResponse": {
                "properties": {
                    "metrics": {
                        "items": {
                            "$ref": "#/components/schemas/CustomMetricResponse"
                        },
                        "type": "array",
                        "title": "Metrics",
                        "description": "List of custom metrics"
                    },
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count",
                        "description": "Total number of metrics"
                    }
                },
                "type": "object",
                "required": [
                    "metrics",
                    "total_count"
                ],
                "title": "CustomMetricsListResponse",
                "description": "Response model for listing custom metrics"
            },
            "CustomerPersonaPydantic": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "goal": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Goal"
                    },
                    "org_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Org Id"
                    }
                },
                "type": "object",
                "title": "CustomerPersonaPydantic",
                "description": "Pydantic version of CustomerPersona for validation and serialization."
            },
            "CustomerPersonaRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the customer persona"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the customer persona"
                    },
                    "goal": {
                        "type": "string",
                        "title": "Goal",
                        "description": "Goal or objective of the customer persona"
                    },
                    "num_calls": {
                        "type": "integer",
                        "title": "Num Calls",
                        "description": "Number of calls that matched the customer persona"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "goal",
                    "num_calls"
                ],
                "title": "CustomerPersonaRequest",
                "description": "Pydantic model for customer persona in simulation"
            },
            "DailySchedule": {
                "properties": {
                    "frequency": {
                        "type": "string",
                        "const": "daily",
                        "title": "Frequency"
                    },
                    "time": {
                        "type": "string",
                        "pattern": "^\\d{2}:\\d{2}$",
                        "title": "Time",
                        "description": "HH:MM 24hr time"
                    }
                },
                "type": "object",
                "required": [
                    "frequency",
                    "time"
                ],
                "title": "DailySchedule"
            },
            "DeleteCronJobResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "success",
                            "error"
                        ],
                        "title": "Status",
                        "description": "The status of the delete operation."
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "A message providing additional details about the operation."
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "message"
                ],
                "title": "DeleteCronJobResponse"
            },
            "DigitalHumanRequest": {
                "properties": {
                    "simulation_id": {
                        "type": "string",
                        "title": "Simulation Id",
                        "description": "ID of the simulation to be used for the digital human"
                    },
                    "goal_adherence": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/GoalAdherence"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Goal Adherence",
                        "description": "List of goal adherence scenarios"
                    },
                    "customer_personas": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/CustomerPersonaRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Customer Personas",
                        "description": "List of customer personas to be used in the simulation"
                    },
                    "workflow_adherence": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "integer"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workflow Adherence",
                        "description": "Dictionary of workflow IDs and their counts"
                    },
                    "load_testing": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Load Testing",
                        "description": "Number of load testing calls",
                        "default": 0
                    },
                    "red_teaming": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Red Teaming",
                        "description": "Number of red teaming calls",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "simulation_id"
                ],
                "title": "DigitalHumanRequest",
                "description": "Pydantic model for digital humans (simulation type) request"
            },
            "DigitalHumanResponse": {
                "properties": {
                    "digital_humans": {
                        "items": {},
                        "type": "array",
                        "title": "Digital Humans",
                        "description": "List of digital humans created for the simulation"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "title": "DigitalHumanResponse"
            },
            "DigitalHumansSettings": {
                "properties": {
                    "default_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Name",
                        "description": "Default name for the digital human",
                        "default": "random"
                    },
                    "default_caller_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Caller Number",
                        "description": "Default caller phone number for the digital human",
                        "default": "random"
                    },
                    "default_language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Language",
                        "description": "Default language for the digital human",
                        "default": "random"
                    },
                    "default_background_noise": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Default Background Noise",
                        "description": "Background noise to be used in the simulation",
                        "default": "none"
                    },
                    "speaks_first": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Speaks First",
                        "description": "Whether the digital human speaks first in the call",
                        "default": false
                    },
                    "first_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "First Message",
                        "description": "First message to be spoken by the digital human",
                        "default": "ai_generated"
                    }
                },
                "type": "object",
                "title": "DigitalHumansSettings",
                "description": "Pydantic model for digital humans settings in simulation"
            },
            "EvalRoute": {
                "type": "string",
                "enum": [
                    "AUDIO",
                    "TEXT",
                    "AUTO"
                ],
                "title": "EvalRoute",
                "description": "Enum representing the evaluation route of a call."
            },
            "EvaluateCallResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "call_id": {
                        "type": "string",
                        "title": "Call Id"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "call_id",
                    "message"
                ],
                "title": "EvaluateCallResponse"
            },
            "Evaluation": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the evaluation result"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When this evaluation result was created (defaults to now in UTC)"
                    },
                    "hallucination": {
                        "type": "boolean",
                        "title": "Hallucination",
                        "description": "Whether the agent exhibited hallucination during the call"
                    },
                    "hallucination_reasoning": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hallucination Reasoning",
                        "description": "Reasoning behind the hallucination, if applicable"
                    },
                    "redundancy": {
                        "type": "boolean",
                        "title": "Redundancy",
                        "description": "Whether the agent exhibited redundancy during the call"
                    },
                    "redundancy_reasoning": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Redundancy Reasoning",
                        "description": "Reasoning behind the redundancy, if applicable"
                    },
                    "agent_speak_percentage": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Speak Percentage",
                        "description": "Percentage of the call where the agent was speaking"
                    },
                    "avg_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avg Agent Latency",
                        "description": "Average latency of the agent's responses during the call"
                    },
                    "latency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Latency"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Latency metrics for the agent's responses"
                    },
                    "num_turns": {
                        "type": "integer",
                        "title": "Num Turns",
                        "description": "Total number of turns taken by the agent during the call"
                    },
                    "call_summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Call Summary",
                        "description": "Summary of the call, if applicable"
                    },
                    "custom_evals": {
                        "anyOf": [
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Evals",
                        "description": "List of custom evaluations performed during the call"
                    },
                    "custom_evals_success_rate": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Evals Success Rate",
                        "description": "Success rate of the custom evaluations performed during the call"
                    },
                    "pronunciation_score": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pronunciation Score",
                        "description": "Pronunciation score of the agent during the call"
                    },
                    "pronunciation_reasoning": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pronunciation Reasoning",
                        "description": "Reasoning behind the pronunciation score, if applicable"
                    }
                },
                "type": "object",
                "required": [
                    "hallucination",
                    "redundancy",
                    "agent_speak_percentage",
                    "avg_agent_latency",
                    "num_turns"
                ],
                "title": "Evaluation",
                "description": "Pydantic model for evaluation result"
            },
            "Event": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "Title of the event"
                    },
                    "start_offset_ms": {
                        "type": "integer",
                        "title": "Start Offset Ms",
                        "description": "Start offset of the event in milliseconds"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the event"
                    },
                    "end_offset_ms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Offset Ms",
                        "description": "End offset of the event in milliseconds"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "List of tags associated with the event"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the event"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "start_offset_ms"
                ],
                "title": "Event",
                "description": "Pydantic model for event data"
            },
            "EventRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "start_offset_ms": {
                        "type": "integer",
                        "title": "Start Offset Ms"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "end_offset_ms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Offset Ms"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the event"
                    }
                },
                "type": "object",
                "required": [
                    "title",
                    "start_offset_ms"
                ],
                "title": "EventRequest",
                "description": "Pydantic model for event data in request"
            },
            "EveryNMinutesSchedule": {
                "properties": {
                    "frequency": {
                        "type": "string",
                        "const": "every_n_minutes",
                        "title": "Frequency"
                    },
                    "interval": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Interval",
                        "description": "Repeat every N minutes"
                    }
                },
                "type": "object",
                "required": [
                    "frequency",
                    "interval"
                ],
                "title": "EveryNMinutesSchedule"
            },
            "GenerateCustomMetricsRequest": {
                "properties": {
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent to generate metrics for"
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "Number of custom metrics to generate",
                        "default": 5
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Custom instructions for metric generation"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id"
                ],
                "title": "GenerateCustomMetricsRequest"
            },
            "GenerateCustomPersonasRequest": {
                "properties": {
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent to generate personas for"
                    },
                    "count": {
                        "type": "integer",
                        "title": "Count",
                        "description": "Number of custom personas to generate",
                        "default": 5
                    },
                    "custom_prompt": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Prompt",
                        "description": "Custom instructions for persona generation"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id"
                ],
                "title": "GenerateCustomPersonasRequest"
            },
            "GetSimulationRunsResponse": {
                "properties": {
                    "simulation_runs": {
                        "items": {
                            "$ref": "#/components/schemas/SimulationRunRes"
                        },
                        "type": "array",
                        "title": "Simulation Runs",
                        "description": "List of simulation runs"
                    }
                },
                "type": "object",
                "title": "GetSimulationRunsResponse"
            },
            "GetSimulationsResponse": {
                "properties": {
                    "simulations": {
                        "items": {
                            "$ref": "#/components/schemas/SimulationRes"
                        },
                        "type": "array",
                        "title": "Simulations",
                        "description": "List of simulations"
                    }
                },
                "type": "object",
                "title": "GetSimulationsResponse"
            },
            "GoalAdherence": {
                "properties": {
                    "goal": {
                        "type": "string",
                        "title": "Goal",
                        "description": "Description of the goal"
                    },
                    "num_calls": {
                        "type": "integer",
                        "title": "Num Calls",
                        "description": "Number of calls that adhered to the goal"
                    }
                },
                "type": "object",
                "required": [
                    "goal",
                    "num_calls"
                ],
                "title": "GoalAdherence",
                "description": "Pydantic model for goal adherence in simulation"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "KeyOut": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "api_key": {
                        "type": "string",
                        "title": "Api Key"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "revoked": {
                        "type": "boolean",
                        "title": "Revoked"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "api_key",
                    "scope",
                    "name",
                    "created_at",
                    "revoked"
                ],
                "title": "KeyOut"
            },
            "Latency": {
                "properties": {
                    "avg_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Avg Agent Latency",
                        "description": "Average latency",
                        "default": 0
                    },
                    "max_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Agent Latency",
                        "description": "Maximum latency",
                        "default": 0
                    },
                    "p50_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P50 Agent Latency",
                        "description": "50th percentile latency",
                        "default": 0
                    },
                    "p90_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P90 Agent Latency",
                        "description": "90th percentile latency",
                        "default": 0
                    },
                    "p95_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P95 Agent Latency",
                        "description": "95th percentile latency",
                        "default": 0
                    },
                    "p99_agent_latency": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "P99 Agent Latency",
                        "description": "99th percentile latency",
                        "default": 0
                    }
                },
                "type": "object",
                "title": "Latency"
            },
            "MonthlySchedule": {
                "properties": {
                    "frequency": {
                        "type": "string",
                        "const": "monthly",
                        "title": "Frequency"
                    },
                    "day_of_month": {
                        "type": "integer",
                        "maximum": 31.0,
                        "minimum": 1.0,
                        "title": "Day Of Month"
                    },
                    "time": {
                        "type": "string",
                        "pattern": "^\\d{2}:\\d{2}$",
                        "title": "Time"
                    }
                },
                "type": "object",
                "required": [
                    "frequency",
                    "day_of_month",
                    "time"
                ],
                "title": "MonthlySchedule"
            },
            "ParticipantRequest": {
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/ParticipantRole"
                    },
                    "spoke_first": {
                        "type": "boolean",
                        "title": "Spoke First"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "spoke_first"
                ],
                "title": "ParticipantRequest",
                "description": "Pydantic model for participant data in request"
            },
            "ParticipantResponse": {
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/ParticipantRole",
                        "description": "Role of the participant in the call"
                    },
                    "spoke_first": {
                        "type": "boolean",
                        "title": "Spoke First",
                        "description": "Whether the participant spoke first in the call"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the participant"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number",
                        "description": "Phone number of the participant (if applicable)"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "spoke_first"
                ],
                "title": "ParticipantResponse",
                "description": "Pydantic model for participant data"
            },
            "ParticipantRole": {
                "type": "string",
                "enum": [
                    "AGENT",
                    "USER"
                ],
                "title": "ParticipantRole",
                "description": "Enum representing the role of a participant in a call."
            },
            "PhoneNumberResponse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id",
                        "description": "Unique identifier for the phone number record"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Timestamp when the record was created"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Phone Number",
                        "description": "The phone number in text format"
                    },
                    "purchase_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Purchase Date",
                        "description": "Date when the phone number was purchased"
                    },
                    "price": {
                        "type": "integer",
                        "title": "Price",
                        "description": "Price of the phone number in cents or smallest currency unit"
                    },
                    "organization_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Organization Id",
                        "description": "Organization ID"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "created_at",
                    "phone_number",
                    "purchase_date",
                    "price",
                    "organization_id"
                ],
                "title": "PhoneNumberResponse",
                "description": "Response schema for phone number data.\nBased on the database table structure with columns:\n- id: int8 (primary key)\n- created_at: timestamptz\n- phone_number: text\n- purchase_date: date\n- price: int8\n- organization_id: uuid"
            },
            "ResponseType": {
                "type": "string",
                "enum": [
                    "pass_fail",
                    "yes_no",
                    "qualitative",
                    "quantitative",
                    "json",
                    "enum"
                ],
                "title": "ResponseType",
                "description": "Enum representing the possible response types for custom metrics."
            },
            "RetrieveCallLogResponse": {
                "properties": {
                    "call_log": {
                        "$ref": "#/components/schemas/CallLog",
                        "description": "Details of the retrieved call log"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "call_log"
                ],
                "title": "RetrieveCallLogResponse"
            },
            "RetrieveCallLogsResponse": {
                "properties": {
                    "call_logs": {
                        "items": {
                            "$ref": "#/components/schemas/CallLog"
                        },
                        "type": "array",
                        "title": "Call Logs",
                        "description": "List of calls retrieved from the database"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "title": "RetrieveCallLogsResponse"
            },
            "SimulationRequest": {
                "properties": {
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent to be used in the simulation"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the simulation"
                    },
                    "sequential_calling": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sequential Calling",
                        "description": "Whether to run the simulation with sequential calling",
                        "default": false
                    },
                    "hang_up_on_transfer": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hang Up On Transfer",
                        "description": "Whether to hang up the call on transfer",
                        "default": false
                    },
                    "max_call_duration": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Call Duration",
                        "description": "Maximum duration of each call in minutes (default is 10 minutes)",
                        "default": 10
                    },
                    "digital_humans_settings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DigitalHumansSettings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Settings for digital humans in the simulation"
                    }
                },
                "type": "object",
                "required": [
                    "agent_id"
                ],
                "title": "SimulationRequest",
                "description": "Pydantic model for simulation request"
            },
            "SimulationRes": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id",
                        "description": "ID of the simulation"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the simulation"
                    },
                    "agent_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent Id",
                        "description": "ID of the agent associated with the simulation"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When the simulation was created"
                    },
                    "settings": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Settings",
                        "description": "Settings of the simulation"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at"
                ],
                "title": "SimulationRes"
            },
            "SimulationResponse": {
                "properties": {
                    "simulation_id": {
                        "type": "integer",
                        "title": "Simulation Id",
                        "description": "ID of the created simulation"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_id"
                ],
                "title": "SimulationResponse"
            },
            "SimulationResultResponse": {
                "properties": {
                    "result": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Result",
                        "description": "Result of the simulation run"
                    },
                    "custom_metrics": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom Metrics",
                        "description": "Custom metrics associated with the simulation result"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Current status of the simulation result"
                    },
                    "latency": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "items": {},
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latency",
                        "description": "Average latency of the simulation run"
                    },
                    "transcript_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcript Url",
                        "description": "URL to the transcript file of the simulation run"
                    },
                    "audio_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Audio Url",
                        "description": "URL to the audio file of the simulation run"
                    }
                },
                "type": "object",
                "title": "SimulationResultResponse"
            },
            "SimulationResultsResponse": {
                "properties": {
                    "simulation_run": {
                        "$ref": "#/components/schemas/SimulationRunResultResponse",
                        "description": "Details of the simulation run"
                    },
                    "simulation_results": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SimulationResultResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Simulation Results",
                        "description": "List of results from the simulation run"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_run"
                ],
                "title": "SimulationResultsResponse"
            },
            "SimulationRunRes": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id",
                        "description": "ID of the simulation run"
                    },
                    "experiment_id": {
                        "type": "integer",
                        "title": "Experiment Id",
                        "description": "ID of the simulation associated with the run"
                    },
                    "summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Summary",
                        "description": "Summary of the simulation run"
                    },
                    "tests_passed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Passed",
                        "description": "Number of tests that passed in the simulation run"
                    },
                    "tests_failed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Failed",
                        "description": "Number of tests that failed in the simulation run"
                    },
                    "total_tests": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Tests",
                        "description": "Total number of tests in the simulation run"
                    },
                    "tests_completed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Completed",
                        "description": "Number of tests that were completed in the simulation run"
                    },
                    "tests_incompleted": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Incompleted",
                        "description": "Number of tests that were not completed in the simulation run"
                    },
                    "curr_step_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curr Step Id",
                        "description": "Current step ID of the simulation run"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When the simulation run was created"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SimulationRunStatus",
                        "description": "Current status of the simulation run"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number",
                        "description": "Phone number of the simulation run"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "experiment_id",
                    "created_at",
                    "status"
                ],
                "title": "SimulationRunRes"
            },
            "SimulationRunResponse": {
                "properties": {
                    "simulation_run_id": {
                        "type": "string",
                        "title": "Simulation Run Id",
                        "description": "ID of the created simulation run"
                    },
                    "agent_id": {
                        "type": "string",
                        "title": "Agent Id",
                        "description": "ID of the agent associated with the simulation run"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "success"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_run_id",
                    "agent_id"
                ],
                "title": "SimulationRunResponse"
            },
            "SimulationRunResultResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "ID of the simulation run"
                    },
                    "simulation_id": {
                        "type": "string",
                        "title": "Simulation Id",
                        "description": "ID of the simulation associated with the run"
                    },
                    "summary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Summary",
                        "description": "Summary of the simulation run"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SimulationRunStatus",
                        "description": "Current status of the simulation run"
                    },
                    "total_tests": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Tests",
                        "description": "Total number of tests in the simulation run"
                    },
                    "tests_passed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Passed",
                        "description": "Number of tests that passed in the simulation run"
                    },
                    "tests_failed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Failed",
                        "description": "Number of tests that failed in the simulation run"
                    },
                    "tests_completed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Completed",
                        "description": "Number of tests that were completed in the simulation run"
                    },
                    "tests_incompleted": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tests Incompleted",
                        "description": "Number of tests that were not completed in the simulation run"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "When the simulation run was created"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "simulation_id",
                    "created_at"
                ],
                "title": "SimulationRunResultResponse"
            },
            "SimulationRunStatus": {
                "type": "string",
                "enum": [
                    "INITIALIZING",
                    "RUNNING",
                    "COMPLETED",
                    "INCOMPLETED"
                ],
                "title": "SimulationRunStatus",
                "description": "Enum representing the possible states of a simulation run."
            },
            "TextProcessorRequest": {
                "properties": {
                    "redis_key": {
                        "type": "string",
                        "title": "Redis Key",
                        "description": "redis key for conversation history"
                    },
                    "test_case_id": {
                        "type": "string",
                        "title": "Test Case Id",
                        "description": "ID of the test case"
                    },
                    "response_format": {
                        "type": "string",
                        "enum": [
                            "chirp",
                            "text"
                        ],
                        "title": "Response Format",
                        "description": "response format",
                        "default": "chirp"
                    }
                },
                "type": "object",
                "required": [
                    "redis_key",
                    "test_case_id"
                ],
                "title": "TextProcessorRequest",
                "description": "Pydantic model for text processor request body"
            },
            "ToolCallRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "start_offset_ms": {
                        "type": "integer",
                        "title": "Start Offset Ms"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "parameters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parameters"
                    },
                    "output": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Output"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "start_offset_ms"
                ],
                "title": "ToolCallRequest",
                "description": "Pydantic model for tool call data in request"
            },
            "ToolCallResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the tool called"
                    },
                    "start_offset_ms": {
                        "type": "integer",
                        "title": "Start Offset Ms",
                        "description": "Start offset of the tool call in milliseconds"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the tool call"
                    },
                    "parameters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parameters",
                        "description": "Parameters passed to the tool call"
                    },
                    "output": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Output",
                        "description": "Output returned by the tool call"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "start_offset_ms"
                ],
                "title": "ToolCallResponse",
                "description": "Pydantic model for tool call data"
            },
            "TranscriptEntryRequest": {
                "properties": {
                    "start_offset_ms": {
                        "type": "integer",
                        "title": "Start Offset Ms",
                        "description": "Start offset of the utterance in milliseconds"
                    },
                    "end_offset_ms": {
                        "type": "integer",
                        "title": "End Offset Ms",
                        "description": "End offset of the utterance in milliseconds"
                    },
                    "speaker": {
                        "$ref": "#/components/schemas/ParticipantRole",
                        "description": "Identifier for the speaker (e.g., 'AGENT', 'USER')"
                    },
                    "utterance": {
                        "type": "string",
                        "title": "Utterance",
                        "description": "Transcribed text of the utterance"
                    }
                },
                "type": "object",
                "required": [
                    "start_offset_ms",
                    "end_offset_ms",
                    "speaker",
                    "utterance"
                ],
                "title": "TranscriptEntryRequest"
            },
            "UpdateCronJobRequest": {
                "properties": {
                    "schedule": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EveryNMinutesSchedule"
                            },
                            {
                                "$ref": "#/components/schemas/DailySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/WeeklySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/MonthlySchedule"
                            },
                            {
                                "$ref": "#/components/schemas/CronSchedule"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Schedule",
                        "description": "The new schedule for the cron job."
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Whether to enable or disable the cron job."
                    }
                },
                "type": "object",
                "title": "UpdateCronJobRequest"
            },
            "UpdateCronJobResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "The unique identifier for the updated cron job."
                    },
                    "experiment_id": {
                        "type": "string",
                        "title": "Experiment Id",
                        "description": "The unique identifier for the associated experiment."
                    },
                    "cron_expression": {
                        "type": "string",
                        "title": "Cron Expression",
                        "description": "The cron expression defining the job schedule."
                    },
                    "enabled": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enabled",
                        "description": "Whether the cron job is enabled."
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At",
                        "description": "The timestamp when the cron job was created."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "experiment_id",
                    "cron_expression",
                    "created_at"
                ],
                "title": "UpdateCronJobResponse"
            },
            "UpdateCustomMetricRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the custom metric"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of what this metric measures"
                    },
                    "response_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ResponseType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type of response expected"
                    },
                    "min_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Min Value",
                        "description": "Minimum value for quantitative metrics"
                    },
                    "max_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Value",
                        "description": "Maximum value for quantitative metrics"
                    },
                    "category": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Category",
                        "description": "Category for organizing metrics"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorizing the metric"
                    },
                    "scoring_guidance": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scoring Guidance",
                        "description": "Guidance on how to score this metric"
                    },
                    "eval_route": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EvalRoute"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Route for evaluating the metric",
                        "default": "AUTO"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model",
                        "description": "Model to use for evaluating the metric"
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "description": "Temperature for evaluating the metric"
                    },
                    "enum_options": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enum Options",
                        "description": "Options for enum metrics"
                    }
                },
                "type": "object",
                "title": "UpdateCustomMetricRequest",
                "description": "Request model for updating a custom metric"
            },
            "UpdateCustomerPersonaRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the customer persona"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the customer persona"
                    },
                    "goal": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Goal",
                        "description": "Goal of the customer persona"
                    }
                },
                "type": "object",
                "title": "UpdateCustomerPersonaRequest"
            },
            "UpdateSimulationRequest": {
                "properties": {
                    "simulation_result_id": {
                        "type": "string",
                        "title": "Simulation Result Id",
                        "description": "Simulation result ID provided via SIP for the specific call"
                    },
                    "events": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Events",
                        "description": "List of events that occurred during the call"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolCallResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls",
                        "description": "List of tool calls made during the call"
                    },
                    "recorded_transcript": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TranscriptEntryRequest"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Recorded Transcript",
                        "description": "Recorded transcript of the call (utilized to analyze STT accuracy)"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "List of tags associated with the call"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata associated with the call"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_result_id"
                ],
                "title": "UpdateSimulationRequest"
            },
            "UpdateSimulationResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "success"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message",
                        "description": "Optional message providing additional information about the response"
                    }
                },
                "type": "object",
                "title": "UpdateSimulationResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WeeklySchedule": {
                "properties": {
                    "frequency": {
                        "type": "string",
                        "const": "weekly",
                        "title": "Frequency"
                    },
                    "day_of_week": {
                        "type": "string",
                        "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                        ],
                        "title": "Day Of Week"
                    },
                    "time": {
                        "type": "string",
                        "pattern": "^\\d{2}:\\d{2}$",
                        "title": "Time"
                    }
                },
                "type": "object",
                "required": [
                    "frequency",
                    "day_of_week",
                    "time"
                ],
                "title": "WeeklySchedule"
            },
            "WorkflowEdge": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the edge"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of the edge (connector)"
                    },
                    "label": {
                        "type": "string",
                        "title": "Label",
                        "description": "Label describing the customer intent or action"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "Source node id"
                    },
                    "target": {
                        "type": "string",
                        "title": "Target",
                        "description": "Target node id"
                    },
                    "sourceHandle": {
                        "type": "string",
                        "title": "Sourcehandle",
                        "description": "Source handle identifier"
                    },
                    "targetHandle": {
                        "type": "string",
                        "title": "Targethandle",
                        "description": "Target handle identifier"
                    },
                    "selected": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Selected",
                        "description": "Whether the edge is selected"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "label",
                    "source",
                    "target",
                    "sourceHandle",
                    "targetHandle"
                ],
                "title": "WorkflowEdge",
                "description": "Pydantic model for workflow edge"
            },
            "WorkflowGenerationRequest": {
                "properties": {
                    "system_prompt": {
                        "type": "string",
                        "title": "System Prompt",
                        "description": "System prompt describing the agent's behavior and capabilities"
                    }
                },
                "type": "object",
                "required": [
                    "system_prompt"
                ],
                "title": "WorkflowGenerationRequest",
                "description": "Pydantic model for workflow generation request"
            },
            "WorkflowGenerationResponse": {
                "properties": {
                    "edges": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowEdge"
                        },
                        "type": "array",
                        "title": "Edges",
                        "description": "List of workflow edges"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/components/schemas/WorkflowNode"
                        },
                        "type": "array",
                        "title": "Nodes",
                        "description": "List of workflow nodes"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Status of the response",
                        "default": "200"
                    }
                },
                "type": "object",
                "required": [
                    "edges",
                    "nodes"
                ],
                "title": "WorkflowGenerationResponse",
                "description": "Pydantic model for workflow generation response"
            },
            "WorkflowNode": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique identifier for the node"
                    },
                    "data": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Data",
                        "description": "Node data containing label and description"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of the node (start, end, editable)"
                    },
                    "width": {
                        "type": "integer",
                        "title": "Width",
                        "description": "Width of the node"
                    },
                    "height": {
                        "type": "integer",
                        "title": "Height",
                        "description": "Height of the node"
                    },
                    "position": {
                        "additionalProperties": {
                            "type": "number"
                        },
                        "type": "object",
                        "title": "Position",
                        "description": "Position coordinates (x, y)"
                    },
                    "deletable": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Deletable",
                        "description": "Whether the node can be deleted"
                    },
                    "draggable": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Draggable",
                        "description": "Whether the node can be dragged"
                    },
                    "selected": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Selected",
                        "description": "Whether the node is selected"
                    },
                    "positionAbsolute": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Positionabsolute",
                        "description": "Absolute position coordinates"
                    },
                    "dragging": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dragging",
                        "description": "Whether the node is being dragged"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "data",
                    "type",
                    "width",
                    "height",
                    "position"
                ],
                "title": "WorkflowNode",
                "description": "Pydantic model for workflow node"
            },
            "src__main__SimulationRunRequest": {
                "properties": {
                    "simulation_id": {
                        "type": "string",
                        "title": "Simulation Id",
                        "description": "ID of the simulation to be run"
                    },
                    "digital_human_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Digital Human Ids",
                        "description": "Digital human IDs to be used in the simulation"
                    },
                    "phone_number": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "^\\+1\\d{10}$"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number",
                        "description": "Optional phone number to be used in this simulation run (overrides the agent phone number)"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_id"
                ],
                "title": "SimulationRunRequest",
                "description": "Pydantic model for simulation run request"
            },
            "src__text_agent_api__SimulationRunRequest": {
                "properties": {
                    "simulation_id": {
                        "type": "string",
                        "title": "Simulation Id",
                        "description": "ID of the simulation to be run"
                    },
                    "digital_human_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Digital Human Ids",
                        "description": "Digital human IDs to be used in the simulation"
                    }
                },
                "type": "object",
                "required": [
                    "simulation_id"
                ],
                "title": "SimulationRunRequest",
                "description": "Pydantic model for simulation run request"
            }
        },
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key required to authenticate requests."
            }
        }
    },
    "security": [
        {
            "apiKeyAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://api.getbluejay.ai",
            "description": "Production server"
        }
    ]
}